
stages:
  - infra
  - build
  - test
  - deploy

before_script:
  - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 830137832802.dkr.ecr.us-east-1.amazonaws.com

terraform-network:
  image: alpine:latest
  stage: infra
  script: 
    - echo "Setup of AWS network resources"

terraform-ecr:
  image: alpine:latest
  stage: infra
  script: 
    - echo "Setup of AWS ecr"

terraform-ecs:
  image: alpine:latest
  stage: infra
  script: 
    - echo "Setup of AWS ecs cluster"

docker-build-web:
  image: alpine:latest
  stage: build
  script:
    - docker build --platform=linux/amd64 -t flask-app:1.0 web-hit-counter/
    - docker tag flask-app:1.0 $CI_REGISTRY_IMAGE/flask-app:1.0
    - docker push $CI_REGISTRY_IMAGE/flask-app:1.0

docker-build-redis:
  image: alpine:latest
  stage: build
  script:
    - docker build --platform=linux/amd64 -t redis:1.0 redis/
    - docker tag redis:1.0 $CI_REGISTRY_IMAGE/redis:1.0
    - docker push $CI_REGISTRY_IMAGE/redis:1.0

variables:
  CI_REGISTRY_IMAGE: 830137832802.dkr.ecr.us-east-1.amazonaws.com

images-scanning:
  image: alpine:latest
  stage: test
  script:
    - echo "AWS command to scan images in ECR"

deploy-redis:
  image: alpine:latest
  stage: deploy
  script:
    - echo "Create new version of task definition for updates"
    - echo "Create task in ECS cluster"

deploy-web:
  image: alpine:latest
  stage: deploy
  script:
    - echo "Create new version of task definition for updates"
    - echo "Create task in ECS cluster"